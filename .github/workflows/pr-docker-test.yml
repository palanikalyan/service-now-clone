name: PR â€” Build & Test Backend Docker

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make mvnw executable
        run: chmod +x mvnw
        working-directory: service-now

      - name: Run Maven tests
        run: ./mvnw test
        working-directory: service-now

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v4
        with:
          context: service-now
          file: service-now/Dockerfile
          push: false
          tags: ${{ github.repository_owner }}/service-now-backend:pr-${{ github.event.pull_request.number }}

      - name: List built images
        run: docker images | grep service-now-backend || true

  deploy-test:
    name: Deploy to test server
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # NOTE: The deploy steps below require the following repository secrets to be set:
      # TEST_SSH_HOST - test server host or IP
      # TEST_SSH_USER - ssh user
      # TEST_SSH_KEY  - private key (PEM) for SSH (no passphrase) or configure TEST_SSH_PASSPHRASE
      # TEST_SSH_PATH - target path on the test server where files will be copied
      # Optional: TEST_SSH_PORT - SSH port (defaults to 22)

      - name: Copy compose and service files to test server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.TEST_SSH_HOST }}
          username: ${{ secrets.TEST_SSH_USER }}
          port: ${{ secrets.TEST_SSH_PORT }}
          key: ${{ secrets.TEST_SSH_KEY }}
          source: |
            docker-compose.yaml
            service-now/**
          target: ${{ secrets.TEST_SSH_PATH }}

      - name: Run deployment commands on test server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_SSH_HOST }}
          username: ${{ secrets.TEST_SSH_USER }}
          port: ${{ secrets.TEST_SSH_PORT }}
          key: ${{ secrets.TEST_SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.TEST_SSH_PATH }}
            # Ensure docker and docker-compose are available on the test server
            docker --version || true
            docker-compose --version || true
            # Build and bring up services (adjust service name if needed)
            docker-compose pull || true
            docker-compose up -d --build --remove-orphans
